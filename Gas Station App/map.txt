// ========================================
        // HOOK: MAP INTEGRATION FUNCTIONS
        // ========================================
        // These functions handle the interactive map
        // Integration point: Add custom markers,
        // route display, and map controls

        function showMap(lat, lon) {
            document.getElementById('mapSection').style.display = 'block';

            if (map) {
                map.remove();
            }

            map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v12',
                center: [lon, lat],
                zoom: 13
            });

            // Add user location marker
            new mapboxgl.Marker({ color: '#3498db' })
                .setLngLat([lon, lat])
                .setPopup(new mapboxgl.Popup().setHTML('<b>Your Location</b>'))
                .addTo(map);
        }

        function showAllStationsOnMap(stations) {
            document.getElementById('mapSection').style.display = 'block';

            if (map) {
                map.remove();
            }

            map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v12',
                center: [-117.9, 33.67], // Center on Orange County
                zoom: 10
            });

            const bounds = new mapboxgl.LngLatBounds();
            if (stations.length > 0) {
                stations.forEach(station => {
                    bounds.extend([station.lon, station.lat]);
                });
                map.fitBounds(bounds, { padding: 50, maxZoom: 15 });
            }
        }

        function addStationToMap(station) {
            if (!map) return;

            const marker = new mapboxgl.Marker({ color: '#e74c3c' })
                .setLngLat([station.lon, station.lat])
                .setPopup(new mapboxgl.Popup().setHTML(`
                    <div>
                        <h4>${station.name}</h4>
                        <p><strong>Brand:</strong> ${station.brand}</p>
                        ${station.distance !== undefined ? `<p><strong>Distance:</strong> ${station.distance} mi</p>` : ''}
                        <p><strong>E85:</strong> $${station.prices?.E85 || 'N/A'}</p>
                        <p><strong>87:</strong> $${station.prices?.['87'] || 'N/A'}</p>
                        <p><strong>89:</strong> $${station.prices?.['89'] || 'N/A'}</p>
                        <p><strong>91:</strong> $${station.prices?.['91'] || 'N/A'}</p>
                        <button onclick="getDirectionsToStation(${station.lat}, ${station.lon})"
                                style="background: #3498db; color: white; border: none; padding: 5px 10px; border-radius: 3px; cursor: pointer; margin-top: 5px;">
                            Get Directions
                        </button>
                    </div>
                `))
                .addTo(map);
        }

        function getDirectionsToStation(lat, lon) {
            if (userLocation) {
                const url = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lon}`;
                window.open(url, '_blank');
            }
        }

        function showStatus(elementId, message, isError = false) {
            const element = document.getElementById(elementId);
            element.textContent = message;
            element.className = `status ${isError ? 'error' : 'success'}`;
            element.classList.remove('hidden');
        }

        function hideStatus(elementId) {
            document.getElementById(elementId).classList.add('hidden');
        }
